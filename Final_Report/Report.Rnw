\documentclass[10pt]{article}
\usepackage[margin=0.75in]{geometry}
\usepackage{lmodern} % Latin modern fonts
\usepackage[T1]{fontenc} % font encodings
\usepackage{etexcmds} % Avoid name clashes with e-TEX commands
\usepackage{amsmath, amsfonts, amssymb, amsthm}
\usepackage{listings} % Typeset source code listings using LATEX
\usepackage{setspace, relsize, booktabs, needspace, epic} % need one or more of these to make latex(describe) & other rms stuff work
\usepackage{longtable} % Allows long tables to break across pages
\usepackage{ctable} % for option for Hmisc Latex tables
\usepackage{colortbl} % allows coloring of individual cells
\usepackage{here} % Provides the H option for floats 
\usepackage{dcolumn} % allows alignment by decimal point in tables
%\usepackage[usenames,dvipsnames,svgnames]{xcolor} % Driver- independent color extensions % gets loaded by something else here
\usepackage{enumitem} % modify numbering style for enumerate
\usepackage{framed} % for shading of whole sections
\usepackage{parskip} % formats paragraphs the way I like
\usepackage{pdflscape} % lets you have landscape sections
\usepackage{graphicx} % for resizebox
\usepackage[super]{nth} % for 1st, 2nd, etc
\usepackage[hyphens]{url}
\usepackage[pdftitle={MAP PWV and CBF Values},
            pdfauthor={D. Liu},
            unicode=true,
            pdfusetitle,
            bookmarks=true,
            bookmarksopenlevel=2,
            breaklinks=true,
            pdfborder={0 0 1},
            backref=false]{hyperref} % support for hypertext
\usepackage[fit]{truncate} % lets you truncate section headings for fancyhdr (and maybe other things)
\usepackage{fancyhdr}
%\usepackage[maxfloats= 44]{morefloats} %increases # of floats that can be held in memory at once

\hypersetup{
    bookmarksnumbered=false, % true means bookmarks in left window are numbered
    bookmarksopen=false,     % true means only level 1 is displayed.
    colorlinks=true,         % false: boxed links; true: colored links
    linkcolor=blue,          % color of internal links
    pdfstartview=FitH
}

\newcommand{\projtitl}{MAP: ABP and CBF/CVR}
\newcommand{\studyLead}{Angela Jefferson, PhD; Katherine Gifford, PsyD}
\newcommand{\code}[1]{\texttt{\smaller #1}}
\newcommand{\scom}[1]{\rm\scriptsize \# #1}
\newcommand{\R}{{\normalfont\textsf{R}}{}}    
\renewcommand{\subsectionmark}[1]{}
\providecommand{\shadeRow}{\rowcolor[gray]{.9}}
\providecommand{\bitshape}{\bfseries\itshape}

 
\title{\projtitl\\ Study Leads: \studyLead}
\author{Hannah Weeks \\ \href{mailto:hannah.l.weeks@vanderbilt.edu}{\url{hannah.l.weeks@vanderbilt.edu}}\\ \& \\
Brooklyn Stanley  \\ \href{mailto:b.stanley@vanderbilt.edu}{\url{b.stanley@vanderbilt.edu}}
\\ \ \\ Department of Biostatistics \\ Vanderbilt University }
\date{February 15, 2017}
%\pagestyle{fancy}


\begin{document}

\maketitle
\tableofcontents     
%\listoffigures
%\listoftables
\clearpage
%\lhead{\small \truncate{.7\headwidth}{\projtitl}\\ 
%    \truncate{.7\headwidth}{\nouppercase \leftmark}}
%\rhead{\small \today\\ \truncate{.3\headwidth}{\rightmark}}



<<Rsetup0, echo= FALSE, results= 'hide', warning=FALSE, message=FALSE>>=
# R options
#options(scipen= 8)

# options for knitr
opts_chunk$set(tidy= TRUE)
opts_chunk$set(highlight= TRUE)
opts_chunk$set(comment= NA)
opts_chunk$set(
    fig.path   = 'figure/graphics-',
    cache.path = 'cache/graphics-',
    fig.align  = 'center',
    #dev        = 'postscript',
    dev        = 'pdf',
    fig.width  = 5,
    fig.height = 5,
    fig.show   = 'hold',
    cache      = FALSE,
    par        = TRUE
    )
opts_chunk$set(echo= TRUE) 
opts_chunk$set(warning= FALSE) 
opts_chunk$set(message= FALSE) 
#opts_chunk$set(results= 'hide') 

knit_hooks$set(
    par= function(before, options, envir){
        if (before && options$fig.show != 'none') {
            par(
                mar      = c(4, 4, 2.1, .1),
                cex.lab  = .95,
                cex.axis = .9,
                mgp      = c(2, .7, 0),
                tcl      = -.3)
        }
    }
)

knit_hooks$set(inline = function(x) {
   if (is.numeric(x)) round(x, 3) else x})
@

<<Rsetup, echo= FALSE, results= 'hide', warning=FALSE, message=FALSE>>=
# Setting up R
rm(list= ls())
options(datadist= NULL)

# So that rms functions will work correctly with ordered factors
options(contrasts=c("contr.treatment","contr.treatment"))


# other libraries
library(Hmisc)
library(rms)
library(xtable)
library(ggplot2)
#library(ltm) # for rcor.test
library(grid)
library(gridExtra) # for grid.arrange

set.seed(20150525)
runPlot=TRUE
runAnalyses=TRUE
@

<<getdataPrep, echo = TRUE>>=
#######################################
#  File Directory                     #
#######################################
platform <- sessionInfo()$platform

proj.dir <- file.path("~", "Documents", "BIOS7352", "Project1")
data.dir <- file.path(proj.dir, "dataForABP_CBF_2017-01-11.rds")

datfile  <- file.path(data.dir)

#######################################
#  Variables                          #
#######################################

# Descriptive and Adjusting Variables
cov.con <- Cs(age, education)
cov.cat <- Cs(enrolled.dx.factor, sex.factor, raceethnicity.factor, 
              apoe4pos.factor, enrolled.dx.factor, 
              htnrx.factor, diabetes.factor, currentsmoking.factor, cvd.factor, afib.factor,  echo.lvh.factor)

desc.cov <- c(
    cov.cat,
    cov.con
)

#covariates for model
cov <- Cs(age, raceethnicity.factor, education, enrolled.dx.factor, apoe4pos.factor, icv) 

#Predictors
predictors <- Cs(
    systolic.rising.surge,
    systolic.prewaking.surge,
    nocturnal.systolic.diff.sleep.self.reported
)

#Outcomes
outcomes.reac <- Cs(asl.reac.left.hemisphere,
                    asl.reac.right.hemisphere,
                    asl.reac.left.frontal.lobe,
                    asl.reac.right.frontal.lobe,
                    asl.reac.frontal.lobe,
                    asl.reac.left.occipital.lobe,
                    asl.reac.right.occipital.lobe,
                    asl.reac.occipital.lobe,
                    asl.reac.left.temporal.lobe,
                    asl.reac.right.temporal.lobe,
                    asl.reac.temporal.lobe,
                    asl.reac.left.parietal.lobe,
                    asl.reac.right.parietal.lobe,
                    asl.reac.parietal.lobe)
outcomes.reac=paste0(outcomes.reac, '.hct')

ma.vars <- Cs(     ma.left.hemisphere,
                   ma.right.hemisphere,
                   ma.left.frontal.lobe.vol,
                   ma.right.frontal.lobe.vol,
                   ma.frontal.lobe.vol,
                   ma.left.occipital.lobe.vol,
                   ma.right.occipital.lobe.vol,                   
                   ma.occipital.lobe.vol,
                   ma.left.temporal.lobe.vol,
                   ma.right.temporal.lobe.vol,                   
                   ma.temporal.lobe.vol,
                   ma.left.parietal.lobe.vol,
                   ma.right.parietal.lobe.vol,                   
                   ma.parietal.lobe.vol)

outcomes.list=vector("list", 1)
names(outcomes.list)=c("ASL.Reac")
outcomes.list[['ASL.Reac']]=outcomes.reac

outcomes=unlist(outcomes.list)

# Exclusion Criteria Variables
excl.var <- Cs(time.reading.indicator, asl.reac.usable)  

@

<<getdata2>>=
totalData <- readRDS(datfile)
@

\clearpage
\section{Summary of Project Requests}

\subsection{Project Background}

\begin{itemize}
  \item Alzheimer's disease (AD) impairs short-term memory and affects one's ability to manage through daily life. 
  \item Disease progresses from normal cognition through a stage of mild cognitive impairment (MCI) and finally to AD. 
  \item Since there are currently no treatments for AD, research focuses on prevention and early detection so that effective strategies may be implemented once treatments are available.
  \item Cardiovascular measures may be associated with and useful in identifying early symptoms of AD.
  \item Cerebrovascular reactivity (CVR), possibly useful in early identification of patients at risk for AD, is a measurement of the change in cerebral blood flow when the vascular system is challenged by presence of carbon dioxide.
  \item The current project goal is to determine if there is an association between cardiovascular measures (based on ambulatory measurements of systolic blood pressure) and cerebrovascular reactivity.
\end{itemize}

\subsection{Project Goals}

{\it Primary Aim}
\begin{itemize}
  \item Characterize the associations between ambulatory blood pressure measurements (ABPM) and cerebrovascular reactivity.
  \item {\bf Hypothesis:} Patients with abnormal variability or surge patterns will be associated with decreased CVR.
\end{itemize}

{\it Secondary Aim}
\begin{itemize}
  \item Investigate which ABPM predictor is most predictive of cognitive function, as measured by CVR.
\end{itemize}

\clearpage

\section{Inclusion/Exclusion Criteria}


\begin{itemize}
  \item Exclude patients with dementia at baseline
  \begin{itemize}
      \item \code{enrolled.dx.factor}, exclude = "Dementia", n = 1
  \end{itemize} 
  \item Quality check
  \begin{itemize}
    \item \code{asl.reac.usuable}, exclude = 0, n = 112
  \end{itemize}
  \item At least 39 readings
  \begin{itemize}
    \item \code{time.reading.indicator}, exclude = "No" or NA, n = 49
  \end{itemize}  
\end{itemize}

<<>>=
#######################################
#  Inclusion/Exclusion                #
#######################################

cvrdata <- totalData[totalData$asl.reac.usable == 1 & 
                       totalData$enrolled.dx.factor != "Dementia",
                     c(1:18, 61, grep("asl.reac", names(totalData)),
                       grep("ma.", names(totalData)))]
cvrdata <- cvrdata[cvrdata$time.reading.indicator == 'Yes' &
                     !is.na(cvrdata$time.reading.indicator),]


exclude <- totalData[!(totalData$map.id %in% cvrdata$map.id),
                     c(1:18, 61, grep("asl.reac", names(totalData)),
                       grep("ma.", names(totalData)))]

@


It should be noted that the method for exclusion is not random. Patient's with a larger intracranial volume were unable to fit into the equipment to gather the readings. It follows that more men were excluded because men tend to be larger in general. The table below displays all of the descriptive statistics for the excluded patients versus the patients in the analysis. Continuous variables have a mean (standard deviation), and discrete variables have a count (percentage). The third column is the p-value for the univariate comparison of the each variable between the excluded and included patients (Chi-square test for discrete and Kruskal-Wallis for continuous). A significant p-value (< 0.05) indicates that the excluded and included populations are significantly different for that variable.

<<>>=
#######################################
#  Inclusion/Exclusion Comparison     #
#######################################

cats <- names(cvrdata)[3:18]
comparison <- c(c(), c(), c(),c())
is <- length(cvrdata$map.id)
xs <- length(exclude$map.id)
for (cat in cats){
  if (is.factor(cvrdata[,cat])){
    chiData <- rbind(cbind(cvrdata[,cat],rep("is", length(cvrdata[,cat]))),
                     cbind(exclude[,cat],rep("xs", length(exclude[,cat]))))
    pp <- chisq.test(table(chiData[,1], chiData[,2]))$p.value
    comparison <- rbind(comparison, c(label(cvrdata[,cat]),'','', round(pp,4)))
    for (lev in levels(cvrdata[,cat])){
      comparison <- rbind(comparison, c(paste("--",lev ), 
                      paste(s <- sum(cvrdata[,cat]==lev, na.rm=T), " (", round(s*100/is),
                            "%)", sep=""),
                      paste(s <- sum(exclude[,cat]==lev, na.rm=T), " (", round(s*100/xs),
                            "%)", sep=""),""))
    }
    next
  }
  anovaData <- as.data.frame(rbind(cbind(cvrdata[,cat],rep("is", length(cvrdata[,cat]))),
                     cbind(exclude[,cat],rep("xs", length(exclude[,cat])))))
  anovaData[,1] <- as.numeric(as.character(anovaData[,1]))
  pp <- kruskal.test(anovaData[,1] ~ anovaData[,2])$p.value
  comparison <- rbind(c(label(cvrdata[,cat]), 
                paste(round(mean(cvrdata[,cat], na.rm=T),1)," (",
                      round(sd(cvrdata[,cat],na.rm=T),1), ")",sep=""),
                paste(round(mean(exclude[,cat], na.rm=T),1)," (",
                      round(sd(exclude[,cat],na.rm=T),1), ")",sep=""),
                round(pp,4)), comparison)
}
comparison <- as.data.frame(comparison[,c(1,3,2,4)])
colnames(comparison) <- c("Variable","Excluded", "Analyzed Data", "P-Value")
kable(comparison, width=3, 
      caption=paste("Comparison of Demographics for Excluded & Included Data, w/ N=",
                    length(exclude$map.id), " and N=",length(cvrdata$map.id),
                                         " respectively", sep=""))
@

\section{Descriptive Statistics}
\subsection{All variables}
<<>>=
cats <- cats[-4]
comparison <- c(c(), c(), c(),c())
mciData <- cvrdata[cvrdata$enrolled.dx.factor=="MCI",]
normData <- cvrdata[cvrdata$enrolled.dx.factor=="Normal",]
abData <- cvrdata[cvrdata$enrolled.dx.factor=="Ambiguous At Risk",]
ms <- length(mciData$map.id)
ns <- length(normData$map.id)
as <- length(abData$map.id)
for (cat in cats){
  if (is.factor(cvrdata[,cat])){
    comparison <- rbind(comparison, c(label(cvrdata[,cat]),'','',''))
    for (lev in levels(cvrdata[,cat])){
      comparison <- rbind(comparison, c(paste("--",lev ), 
                      paste(s <- sum(normData[,cat]==lev, na.rm=T), " (", round(s*100/ns),
                            "%)", sep=""),
                      paste(s <- sum(mciData[,cat]==lev, na.rm=T), " (", round(s*100/ms),
                            "%)", sep=""),
                      paste(s <- sum(abData[,cat]==lev, na.rm=T), " (", round(s*100/as),
                            "%)", sep="")))
    }
    next
  }
  comparison <- rbind(c(label(cvrdata[,cat]), 
                paste(round(mean(normData[,cat], na.rm=T),1)," (",
                      round(sd(normData[,cat],na.rm=T),1), ")",sep=""),
                paste(round(mean(mciData[,cat], na.rm=T),1)," (",
                      round(sd(mciData[,cat],na.rm=T),1), ")",sep=""),
                paste(round(mean(abData[,cat], na.rm=T),1)," (",
                      round(sd(abData[,cat],na.rm=T),1), ")",sep="")), comparison)
}
comparison <- as.data.frame(comparison)
colnames(comparison) <- c("Variable","Normal//N = 101", "MCI//N = 62", "Ambiguous At-Risk//N = 11")
kable(comparison, width=3, caption="Comparison of Demographics across Diagnosis Status")
#kable(comparison, width=3, 
#      caption=paste("Comparison of Demographics across Disease Status, w/ N=",
#                    length(normData$map.id), ", N=", length(mciData$map.id),", and N=",
#                    length(abData$map.id), " respectively", sep=""))

@

<<>>=
ggplot(cvrdata, aes(x=systolic.rising.surge, fill = enrolled.dx.factor)) +
  geom_histogram(alpha=0.4, position="identity", binwidth = 5) + 
  xlab("Systolic Rising Surge") + scale_fill_discrete(name = "Diagnosis")

ggplot(cvrdata, aes(x=systolic.prewaking.surge, fill = enrolled.dx.factor)) +
  geom_histogram(alpha=0.4, position="identity", binwidth = 5) + 
  xlab("Systolic Prewaking Surge") + scale_fill_discrete(name = "Diagnosis")

ggplot(cvrdata, aes(x=nocturnal.systolic.diff.sleep.self.reported, fill = enrolled.dx.factor)) +
  geom_histogram(alpha=0.4, position="identity", binwidth = 5) + 
  xlab("Nocturnal Difference in Systolic BP") + scale_fill_discrete(name = "Diagnosis")


@

<<>>=
predictors <- cvrdata[,c(2,16:18)]
outcomes <- cvrdata[, 20:33]

outlong <- c()
for (out in names(outcomes)){
  lab <- rep(out, length(outcomes[,out]))
  temp <- cbind(outcomes[, out], lab, predictors)
  outlong <- rbind(outlong, temp)
}

names(outlong)[1] <- "outcome"
levels(outlong$lab) <- c("Left Hemisphere", "Right Hemisphere", "Left Frontal Lobe", 
                         "Right Frontal Lobe", "Full Frontal Lobe", "Left Occipital Lobe", 
                         "Right Occipital Lobe", "Full Occipital Lobe", "Left Temporal Lobe", 
                         "Right Temporal Lobe", "Full Temporal Lobe", "Left Parietal Lobe", 
                         "Right Parietal Lobe", "Full Parietal Lobe")

ggplot(outlong, aes(x=outcome, fill = enrolled.dx.factor)) +
  geom_histogram(alpha=0.4, position="identity", binwidth = 1) + facet_wrap(~lab, ncol=3) +
  theme(strip.text = element_text(size=12), 
        axis.text.x = element_text(size=10), axis.text.y  = element_text(size=10),
        panel.grid.major.x=element_line(colour='grey')) + ylab("Count") +
  xlab("Measured CVR") + scale_fill_discrete(name = "Diagnosis")
@

The following boxplots display the distribution of each of the outcome variables. Most of the outliers are in the upper half of the data. It should be noted that most outliers within each part of the brain are most likely highly correlated. Thus, if a patient is an outlier for left frontal loab, then she is probably an outlier for the right side as well. This can be seen in the lower outliers of the frontal lobe distribution which are all from the patient with id = 034. 

<<>>=
ggplot(outlong[c(1:174,349:1392),], aes(factor(lab), outcome)) +
  geom_boxplot(outlier.colour = "purple") + 
  theme(legend.position="none", strip.text = element_text(size=12), 
        axis.text.x = element_text(size=11, angle = 80, hjust = 1), 
        axis.text.y  = element_text(size=12),
        panel.grid.major.x=element_line(colour='grey')) +
  ylab("Measured CVR") + xlab("Area Scanned")

ggplot(outlong[c(175:348,1393:2436),], aes(factor(lab), outcome)) +
  geom_boxplot(outlier.colour = "purple") + 
  theme(legend.position="none", strip.text = element_text(size=12), 
        axis.text.x = element_text(size=11, angle = 70, hjust = 1), 
        axis.text.y  = element_text(size=14),
        panel.grid.major.x=element_line(colour='grey')) +
  ylab("Measured CVR") + xlab("Area Scanned")

@

<<>>=
ggplot(outlong, aes(systolic.rising.surge, outcome)) +
  geom_point() + geom_smooth() + facet_wrap(~lab, ncol=3) + 
  theme(legend.position="none", strip.text = element_text(size=12), 
        axis.text.x = element_text(size=14), axis.text.y  = element_text(size=14),
        panel.grid.major.x=element_line(colour='grey')) +
  ylab("Measured CVR") + xlab("Systolic Rising Surge Blood Pressure")

ggplot(outlong, aes(systolic.prewaking.surge, outcome, group=1)) +
  geom_point() + geom_smooth() + facet_wrap(~lab, ncol=3) + 
  theme(legend.position="none", strip.text = element_text(size=12), 
        axis.text.x = element_text(size=14), axis.text.y  = element_text(size=14),
        panel.grid.major.x=element_line(colour='grey')) +
  ylab("Measured CVR") + xlab("Systolic Prewaking Surge Blood Pressure")


ggplot(outlong, aes(noc.sys.diff, outcome, group=1)) +
  geom_point() + geom_smooth() + facet_wrap(~lab, ncol=3) + 
  theme(legend.position="none", strip.text = element_text(size=12), 
        axis.text.x = element_text(size=14), axis.text.y  = element_text(size=14),
        panel.grid.major.x=element_line(colour='grey')) +
  ylab("Measured CVR") + xlab("Difference in Awake/Sleeping Systolic Blood Pressure")


@
As you can see from the previous sets of scatterplots, most of the outcomes have no trend over the predictors, with a slope around 0. The plots for nocturnal difference in systolic blood pressure has a slight downward slope on the left hand side. However, this is driven by only 3 points in that area so it is unclear if this is anything more than spurious. However, these are all univariate relationships; these trends may not hold in the adjusted analyses.


<<describeAll, results= 'asis'>>=
latex(describe(mydat0, descript= "All variables"), file= "")
@

<<descrPrep, warning= FALSE>>=
my.LatexlTable <-function(my.descr.var, my.bygrp, my.bygrp.lab=NULL, my.dat, my.test=TRUE, my.overall=TRUE, printWarning=TRUE){
  my.descr.var = setdiff(my.descr.var, my.bygrp)
  descrForm <- as.formula(paste0(paste(my.descr.var, collapse= " + "),  "~", my.bygrp))
  
  summary = summaryM(descrForm,
    data       = my.dat,
    test       = my.test,
    continuous = 5,
    overall    = my.overall
  )
  
  my.bygrp.lab =ifelse(is.na(my.bygrp.lab), my.bygrp, my.bygrp.lab)
  cat('\\LTcapwidth=\\textwidth \n')
  if (printWarning) {
      cat("\\textcolor{magenta}{Due to small cell counts, some of the chi-squared values and p-values may be incorrect.}\\\\ \n")
  }    

  latex(summary,
      file        = "",
      what        = '%',
      caption     = paste0("All variables: Descriptive statistics by ", my.bygrp.lab),
      prn         = TRUE,
      npct        = "both",
      exclude1    = FALSE,
      prmsd       = TRUE,
      long        = TRUE,
      where       = "htbp",
      digits      = 3,
      pdig        = 4,
      round       = 2,
      size       = "smaller[3]",
      outer.size  = "footnotesize",
      lines.page   = 400,
      middle.bold = TRUE,
      longtable   = TRUE,
      center      = "centering",
      label       = paste0('tbl:descr.', my.bygrp),
      vnames = 'names'
  )
}  
@

<<>>=











@


\clearpage
\section{Statistical Analysis Plan}

\subsection{Variables}

Outcomes: CVR measures for different regions of interest within the brain\\
\begin{itemize}
  \item \texttt{asl.reac.left.hemisphere.hct}
  \item \texttt{asl.reac.right.hemisphere.hct}
  \item \texttt{asl.reac.left.frontal.lobe.hct}
  \item \texttt{asl.reac.right.frontal.lobe.hct}
  \item \texttt{asl.reac.frontal.lobe.hct}
  \item \texttt{asl.reac.left.occipital.lobe.hct}
  \item \texttt{asl.reac.right.occipital.lobe.hct}
  \item \texttt{asl.reac.occipital.lobe.hct}
  \item \texttt{asl.reac.left.temporal.lobe.hct}
  \item \texttt{asl.reac.right.temporal.lobe.hct}
  \item \texttt{asl.reac.temporal.lobe.hct}
  \item \texttt{asl.reac.left.parietal.lobe.hct}
  \item \texttt{asl.reac.right.parietal.lobe.hct}
  \item \texttt{asl.reac.parietal.lobe.hct}
\end{itemize}

Predictors  
\begin{itemize}
  \item \texttt{systolic.prewaking.surge}: Mean SBP in two hours after self-reported wake time minus mean SBP in two hours prior to self-reported wake time 
  \item \texttt{systolic.rising.surge}: First SBP reading after self-reported wake time minus last SBP before self-reported wake time
  \item \texttt{nocturnal.systolic.diff.sleep.self.reported}: Mean SBP during self-reported wake time minus mean SBP from self-reported asleep time
\end{itemize}

Covariates
\begin{itemize}
  \item \texttt{age}$^*$
  \item \texttt{education}$^*$
  \item \texttt{sex.factor}$^*$
  \item \texttt{enrolled.dx.factor}$^*$: diagnosis group (dementia excluded)
  \begin{itemize}
    \item Normal
    \item MCI
    \item Ambiguous at risk
  \end{itemize}
  \item \texttt{raceethnicity.factor}$^*$
  \item \texttt{apoe4pos.factor}$^*$
  \item \texttt{htnrx.factor}$^*$
  \item \texttt{diabetes.factor}
\end{itemize}

{\large Diabetes?}\\

Regional brain volume variables. Models for outcomes in a given region are controlled for the corresponding variable for volume in that region.
\begin{itemize}
  \item \texttt{ma.left.hemisphere.vol}
  \item \texttt{ma.right.hemisphere.vol}
  \item \texttt{ma.left.frontal.lobe.vol}
  \item \texttt{ma.right.frontal.lobe.vol}
  \item \texttt{ma.frontal.lobe.vol}
  \item \texttt{ma.left.occipital.lobe.vol}
  \item \texttt{ma.right.occipital.lobe.vol}
  \item \texttt{ma.occipital.lobe.vol}
  \item \texttt{ma.left.temporal.lobe.vol}
  \item \texttt{ma.right.temporal.lobe.vol}
  \item \texttt{ma.temporal.lobe.vol}
  \item \texttt{ma.left.parietal.lobe.vol}
  \item \texttt{ma.right.parietal.lobe.vol}
  \item \texttt{ma.parietal.lobe.vol}
\end{itemize}

<<missing, results = 'asis'>>=
#######################################
#  Missing Data                       #
#######################################

missing <- c(c(), c())
#comparison[,c("Variable", "Analyzed Data")]
for (cat in cats){
    missing <- rbind(missing, c(label(cvrdata[,cat]), paste(s <- sum(is.na(cvrdata[,cat])), " (", round(s*100/is, 2), "%)", sep="")))          
 }   

missing <- as.data.frame(missing)
colnames(missing) <- c("Variable", "Missingness")

print(xtable(missing, caption=paste("Missingness (N=", nrow(cvrdata), ")", sep="")),
      caption.placement = "top")
@


\subsection{Analysis Plan Overview}
Cross-sectional analysis of 174 (check) patients from the VMAC MAP study.

certain covariates not included in models because essentially all patients were in one of the categories (e.g. smoking had like one non-smoker)


\section{Analysis Results}

Weighted vs closest for match?

{\huge I changed name of imputation to `impute.data` to avoid issue with there being a function called `impute`}

<<imputation, results = 'hide'>>=
#######################################
#  Multiple-Imputation                #
#######################################
label(cvrdata$enrolled.dx) <- "Diagnosis"
# toPredict <- c("systolic.rising.surge", "systolic.prewaking.surge", 
#                "noc.sys.diff")
cvrdata$enrolled.dx <-factor(cvrdata$enrolled.dx)


impute.data <- aregImpute(~ systolic.rising.surge + systolic.prewaking.surge + noc.sys.diff + 
                       enrolled.dx + sex + raceethnicity + apoe4pos + enrolled.dx + education +
                       htnrx + icv + left.hemisphere + right.hemisphere, data = cvrdata,
                     match = "closest")

crvdata$sys.rising.impute <- crvdata$systolic.rising.surge
crvdata$sys.prewaking.impute <- crvdata$systolic.prewaking.surge
crvdata$noc.diff.impute <- crvdata$nocturnal.systolic.diff.sleep.self.reported

crvdata$noc.diff.impute[is.na(crvdata$noc.diff.impute)] <- rowMeans(impute$imputed$nocturnal.systolic.diff.sleep.self.reported[,])
crvdata$sys.rising.impute[is.na(crvdata$sys.rising.impute)] <- rowMeans(impute$imputed$systolic.rising.surge[,])
crvdata$sys.prewaking.impute[is.na(crvdata$sys.prewaking.impute)] <- rowMeans(impute$imputed$systolic.prewaking.surge[,])


@


{\large imputation graphs will go in sensitivity analysis section}

<<results = 'hide'>>=
#######################################
#  Model Fitting                      #
#######################################
outcomes.reac <- sub("asl.reac.", "", outcomes.reac, fixed = TRUE)
outcomes.reac <- sub(".hct", "", outcomes.reac, fixed = TRUE)



modelFit <- function(outcome, predictor, ma, knot){
  
  fit <- fit.mult.impute(as.formula(paste0(outcome, "~ rcs(", predictor, ", c(", 
                                           knot[1],",", knot[2],",", 
                                           knot[3], ",", knot[4], ")) +", 
                                           ma, "+",
"age + sex + raceethnicity + education + enrolled.dx + apoe4pos")),
                         fitter = ols, xtrans = impute.data, data = cvrdata)
  
  return(fit)
}

#Knot locations for each predictor
prewaking.knot <- c(0, quantile(subset(cvrdata, systolic.prewaking.surge > 0)$systolic.prewaking.surge, probs = c(.25, .5, .75), na.rm = T))

rising.knot <- c(0, quantile(subset(cvrdata, systolic.rising.surge > 0)$systolic.rising.surge, probs = c(.25, .5, .75), na.rm = T))

noc.knot <- c(0, quantile(subset(cvrdata, noc.sys.diff > 0)$noc.sys.diff, probs = c(.1,.5,.9), na.rm = T))

knots <- rbind(prewaking.knot, rising.knot, noc.knot); colnames(knots) = NULL
knots

#Systolic prewaking surge
mod.sys.prewaking.surge <- list()
for(i in seq_along(outcomes.reac)){
  mod.sys.prewaking.surge[[i]] <- modelFit(outcome = outcomes.reac[i], 
                                           predictor = "systolic.prewaking.surge",
                                           ma = ma.vars[i],
                                           knot = prewaking.knot)
}

#Systolic rising surge
mod.sys.rising.surge <- list()
for(i in seq_along(outcomes.reac)){
  mod.sys.rising.surge[[i]] <- modelFit(outcome = outcomes.reac[i],
                                           predictor = "systolic.rising.surge",
                                           ma = ma.vars[i],
                                        knot = rising.knot)
}

#Nocturnal Difference
mod.noc.sys.diff <- list()
for(i in seq_along(outcomes.reac)){
  mod.noc.sys.diff[[i]] <- modelFit(outcome = outcomes.reac[i],
                                           predictor = "noc.sys.diff",
                                           ma = ma.vars[i],
                                    knot = noc.knot)
}
@


\subsection{Test of Association between ABPM and CVR}

Fit linear models with rcs for predictor to allow for non-linear association. Knots placed at 0 and {\large other percentiles}. 4 knots for each

<<assocTable, results = 'asis'>>=
outcomeNames <- c("Left Hemisphere", "Right Hemisphere", "Left Frontal Lobe",
                         "Right Frontal Lobe", "Full Frontal Lobe", "Left Occipital Lobe",
                         "Right Occipital Lobe", "Full Occipital Lobe", "Left Temporal Lobe",
                         "Right Temporal Lobe", "Full Temporal Lobe", "Left Parietal Lobe",
                         "Right Parietal Lobe", "Full Parietal Lobe")



sys.prewaking.pval <- lapply(mod.sys.prewaking.surge,
                             function(x) anova(x)["systolic.prewaking.surge","P"])
sys.rising.pval <- lapply(mod.sys.rising.surge,
                             function(x) anova(x)["systolic.rising.surge","P"])
noc.sys.diff.pval <- lapply(mod.noc.sys.diff,
                             function(x) anova(x)["noc.sys.diff","P"])

assoc.table <- data.frame("SBP Prewaking Surge" = unlist(sys.prewaking.pval),
                          "SBP Rising Surge" = unlist(sys.rising.pval),
                          "Nocturnal SBP Difference" = unlist(noc.sys.diff.pval),
                          row.names = outcomeNames,
                          check.names = FALSE)

print(xtable(assoc.table, digits = 3,
             caption = "P-values for test of association between ABPM and CVR"),
      caption.placement = "top")
@

\begin{itemize}
  \item The only model with an association detected at the 0.05 significance level was for nocturnal difference in systolic blood pressure.
  \item However, we would recommend a multiple comparisons adjustement for fitting the 42 models (e.g. using a Bonferroni-corrected significance level of $\frac{.05}{42} = .0012$). With an adjusted significance level, we would not see a significant association for any brain region-predictor of interest pair.
\end{itemize}

\subsection{Coefficients and Partial Effect Plots}

<<eval = F>>=
sys.prewaking.coef <- do.call(rbind, lapply(mod.sys.prewaking.surge,
                             function(x) x$coef[grep("systolic", names(x$coef))]))
  
sys.rising.coef <- do.call(rbind, lapply(mod.sys.prewaking.surge,
                             function(x) x$coef[grep("systolic", names(x$coef))]))

noc.diff.coef <- do.call(rbind, lapply(mod.sys.prewaking.surge,
                             function(x) x$coef[grep("noc", names(x$coef))]))


coef.table <- data.frame("SBP Prewaking Surge" = unlist(sys.prewaking.pval),
                          "SBP Rising Surge" = unlist(sys.rising.pval),
                          "Nocturnal SBP Difference" = unlist(noc.sys.diff.pval),
                          row.names = outcomeNames,
                          check.names = FALSE)

print(xtable(assoc.table, digits = 3,
             caption = "P-values for test of association between ABPM and CVR"),
      caption.placement = "top")
@


Since coefficients from fitting a cubic spline are not directly interpretable, we provide partial effect plots. A single plot is presented from each model for the predictor of interest against the CVR outcome for the specified region of interest. Parital effect plots show the effect of each SBP measure on CVR outcome with other variables in the model fixed. By default, continuous variables are fixed at their median and categorical variables are fixed at their reference group. For these data, the default plotting values for (non-brain volume) covariates are:

<<>>=
subset_cvrdata <- subset(cvrdata, select = c(age, sex, enrolled.dx, raceethnicity,
                                             apoe4pos, htnrx, education))
datadist(subset_cvrdata)$limits["Adjust to",]
@


\begin{landscape}
<<pep.Sys.Prewaking, fig.width = 10, fig.height = 7.5, echo = F, cache = TRUE>>=
dd <- datadist(cvrdata)
options(datadist = "dd")

#Systolic prewaking surge
sys.prewaking.PEP <- lapply(mod.sys.prewaking.surge,
                             function(x) ggplot(Predict(x, systolic.prewaking.surge),
                                                adj.subtitle = FALSE,
                                                anova = anova(x), size.anova = 3,
                                                pval = TRUE,
                                                ylim. = c(1,5),
                                                xlab = "SBP prewaking"))
do.call(grid.arrange, sys.prewaking.PEP)
@

<<pep.Sys.Rising, fig.width = 10, fig.height = 7.5, eval = F, cache = TRUE>>=
#Systolic rising surge
sys.rising.PEP <- lapply(mod.sys.rising.surge,
                             function(x) ggplot(Predict(x, systolic.rising.surge),
                                                adj.subtitle = FALSE,
                                                anova = anova(x), size.anova = 3,
                                                pval = TRUE,
                                                ylim. = c(1,5),
                                                xlab = "SBP rising"))
do.call(grid.arrange, sys.rising.PEP)
@

<<pep.Noc.Diff, fig.width = 10, fig.height = 7.5, cache = TRUE>>=
#Nocturnal difference
noc.sys.diff.PEP <- lapply(mod.noc.sys.diff,
                             function(x) ggplot(Predict(x, noc.sys.diff),
                                                adj.subtitle = FALSE,
                                                anova = anova(x), size.anova = 3,
                                                pval = TRUE,
                                                ylim. = c(1,5),
                                                xlab = "Nocturnal Difference"))
do.call(grid.arrange, noc.sys.diff.PEP)
@
\end{landscape}

<<eval=F>>=


#All the above are at default values, but can look at these interactively
plot1 <- ggplot(Predict(mod.sys.prewaking.surge[[1]], systolic.prewaking.surge, age=c(60,70)))
#plot2 <-
ggplot(Predict(mod.sys.prewaking.surge[[1]], systolic.prewaking.surge, enrolled.dx=c("Normal","MCI", "Ambiguous At Risk"), age=dd$limits["Adjust to", "age"]))
grid.arrange(plot1, plot2, ncol = 2)

ggplot(Predict(mod.sys.prewaking.surge[[1]], systolic.prewaking.surge))

ggplot(Predict(mod.noc.sys.diff[[1]], noc.sys.diff)) +
  scale_x_discrete(limits = c(noc.knot, 10, 20)) 



@

\subsection{Partial Effect Plots: Stratified by Diagnosis}
Though results weren't significant, to understand potential trends we also present partial effect plots stratified by diagnosis group

<<, echo = T>>=
dd <- datadist(cvrdata)
options(datadist = "dd")
#Function obtained from:
# http://stackoverflow.com/questions/11883844/inserting-a-table-under-the-legend-in-a-ggplot2-histogram

#create inset table 
g_legend<-function(a.gplot){ 
  tmp <- ggplot_gtable(ggplot_build(a.gplot)) 
  leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box") 
  legend <- tmp$grobs[[leg]] 
  return(legend)} 

legend.dx <- g_legend(ggplot(Predict(mod.noc.sys.diff[[1]], noc.sys.diff,
                 enrolled.dx = c("Normal", "MCI", "Ambiguous At Risk"))))
@


\begin{landscape}
<<pep.Sys.Prewaking.dx, fig.width = 10, fig.height = 7.5, echo = F, cache = F>>=
theme_update(legend.position = "none")

#Systolic prewaking surge
sys.prewaking.PEP.dx <- lapply(mod.sys.prewaking.surge,
                             function(x) ggplot(Predict(x, systolic.prewaking.surge,
                                                        enrolled.dx = c("Normal",
                                                                        "MCI",
                                                                        "Ambiguous At Risk")),
                                                colfill = "grey60",
                                                adj.subtitle = FALSE,
                                                ylim. = c(0,5),
                                                xlab = "SBP prewaking") + 
  theme(legend.position = "none"))

sys.prewaking.PEP.dx[[15]] <- legend.dx
do.call(grid.arrange, sys.prewaking.PEP.dx)
@

<<pep.Sys.Rising.dx, fig.width = 10, fig.height = 7.5, echo = F, cache = F>>=
#Systolic rising surge
sys.rising.PEP.dx <- lapply(mod.sys.rising.surge,
                             function(x) ggplot(Predict(x, systolic.rising.surge,
                                                        enrolled.dx = c("Normal",
                                                                        "MCI",
                                                                        "Ambiguous At Risk")),
                                                colfill = "grey60",
                                                adj.subtitle = FALSE,
                                                ylim. = c(0,5),
                                                xlab = "SBP rising") + 
  theme(legend.position = "none"))

sys.rising.PEP.dx[[15]] <- legend.dx
do.call(grid.arrange, sys.rising.PEP.dx)
@

<<pep.Noc.Diff.dx, fig.width = 10, fig.height = 7.5, cache = F>>=
#Nocturnal difference
noc.sys.diff.PEP.dx <- lapply(mod.noc.sys.diff,
                             function(x) ggplot(Predict(x, noc.sys.diff,
                                                        enrolled.dx = c("Normal",
                                                                        "MCI",
                                                                        "Ambiguous At Risk")),
                                                colfill = "grey60",
                                                adj.subtitle = FALSE,
                                                ylim. = c(0,5),
                                                xlab = "Nocturnal Difference") + 
  theme(legend.position = "none"))


noc.sys.diff.PEP.dx[[15]] <- legend.dx
do.call(grid.arrange, noc.sys.diff.PEP.dx)
@
\end{landscape}

\subsection{Tests of Linearity for ABPM Measures}

<<results='asis'>>=
sys.prewaking.nonlin <- lapply(mod.sys.prewaking.surge,
                             function(x) anova(x)[" Nonlinear","P"])
sys.rising.nonlin <- lapply(mod.sys.rising.surge,
                             function(x) anova(x)[" Nonlinear","P"])
noc.sys.diff.nonlin <- lapply(mod.noc.sys.diff,
                             function(x) anova(x)[" Nonlinear","P"])


linear.table <- data.frame("SBP Prewaking Surge" = unlist(sys.prewaking.nonlin),
                          "SBP Rising Surge" = unlist(sys.rising.nonlin),
                          "Nocturnal SBP Difference" = unlist(noc.sys.diff.nonlin),
                          row.names = outcomeNames,
                          check.names = FALSE)

print(xtable(linear.table, digits = 3,
             caption = "P-values for test of linearity for ABPM predictors"),
      caption.placement = "top")
@

\section{Sensitivity Analysis}
The following histograms show the distribution of each of the predictors with the distribution of the imputed values overlayed in blue. This is to display that the imputations are consistent with the observed data.
<<>>=
ggplot(crvdata, aes(x=sys.rising.impute, fill = is.na(systolic.rising.surge))) +
  geom_histogram(alpha=0.4, position="identity") + 
  xlab("Systolic Rising Surge") + scale_fill_discrete(name = "Imputed")

ggplot(crvdata, aes(x=sys.prewaking.impute, fill = is.na(systolic.prewaking.surge))) +
  geom_histogram(alpha=0.4, position="identity") + 
  xlab("Systolic Prewaking Surge") + scale_fill_discrete(name = "Imputed")

ggplot(crvdata, aes(x=noc.diff.impute, fill = is.na(noc.sys.diff))) +
  geom_histogram(alpha=0.4, position="identity") + 
  xlab("Nocturnal Difference in Surge") + scale_fill_discrete(name = "Imputed")

@

\section{Summary of Results}

\begin{itemize}
  \item Any associations?
  \item Trends observed in the partial effect plots?
  \item Nonlinearity of ABPM predictors?
  \item Secondary aim: predictive power of ABPM measures?
\end{itemize}

\clearpage
\section{R session information}
\small
<<versionInfo, results= 'markup'>>=
    # helpful code from Nate (modified)
    cat(version['version.string'][[1]], "\n")    
    pack <- installed.packages()
    pack.out <- pack[, c('Package', 'Version', 'Priority', 
        'Depends')]
    pack.in.session <- (.packages())
    pack.out2 <- data.frame(pack.out[pack.out[, 1] %in% 
        pack.in.session, ])[, -1]
    cat("Packages:\n")
    pack.out2[!pack.out2$Priority%in%c('base','recommended'),-2,
        drop=FALSE]
@

\section{Roles and Responsibilities}

\section{Code Appendix}

Change this to echo = TRUE to print all code here in the appendix rather than in the report itself

<<show-code, ref.label=all_labels(), echo = FALSE, eval=FALSE>>=

@


\end{document}

